package ch6; //p.211

public class Armor {
	private String name;
	private int height;

	public String getName() {		//getter
		return name;
	}

	public void setName(String value) {
		name = value;
	}

	public int getHeight() {
		return height;
	}

	public void setHeight(int value) {
		height = value;
	}

}
/*
클래스는 단지 설계일 뿐, 실제 사용하려면 객체를 메모리에 생성해야 함.
설계한 내용대로 메모리에 객체를 생성하는 명령문 => new
즉, 클래스의 객체를 생성하고자 new 명령문을 실행했을 때, 각각의 독립적인 객체를 '인스턴스(instance)'라고 함
*/

/*
자바의 메모리

1. 코드(Code)영역: 메모리에 올리는 것: 자바 소스 파일에 정의한 클래스에 고나한 정보와 코드를 코드영역에 만들어주는 것

2. 힙(Heap)영역: 클래스를 설계한 다음 이를 사용하기 위해 메모리에 해당 클래스의 인스턴스 생성하면 메모리의 힙 영역에 생성됨.
				필드와 메서드로 구성된 인스턴스가 생성되지만, 실제로 클래스의 메서드 코드는 힙 메모리에 생성되지 않음.
				이미 실행 시작 시점에 클래스 로더에 의해 코드 영역에 만들어지고 이후 다시 메모리에 만들어지지 않음.
				즉, 실제로는 힙 메모리에는 필드만 생성됨. 인스턴스가 참조하는 메서드는 코드 영역에 생성된 내용을 사용
				
3. 스택(Stack)영역: 메서드가 실행될 때 가장 처음으로는 스택에 매개변수를 생성하고, 그곳에 인자값을 저장하는 작업이 수행됨. 직접 접근할 수 있는 유일한 메모리.
- 필드: 클래스의 속성을 나타내는 변수(클래스의 구성요소). 메모리에 생성된 후 자동으로 초기화됨
- 지역변수: 메서드가 실행되면서 필요한 데이터를 잠시 유지하기 위해 사용하는 변수. 메서드 내에서 선언한 변수. 자동으로 초기화되지 않으므로 선언과 동시에 초기화 작업을 해줘야 함.

=> 스택 메모리에 참조변수를 선언하고 이 변수에 힙 메모리에 생성된 인스턴스의 참조정보를 저장해 접근하는 방식 사용.
	즉, new 명령문이 인스턴스를 힙 메모리에 할당할 때 반환하는 참조 정보를 변수에 저장해 사용함으로써 해당 인스턴스에 접근 가능.
	참조변수에는 할당된 위치 정보가 저장되는 것. 
*/